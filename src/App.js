import React, { useState } from 'react';
import './App.css';

function App() {
  const [likedSongs, setLikedSongs] = useState({
    '–ß–µ—Ä–≤–æ–Ω–∞ —Ä—É—Ç–∞': false,
    '–í–æ–¥–æ–≥—Ä–∞–π': false,
    '–Ø –ø—ñ–¥—É –≤ –¥–∞–ª–µ–∫—ñ –≥–æ—Ä–∏': false,
    '–ë–∞–ª–∞–¥–∞ –ø—Ä–æ –º–∞–ª—å–≤–∏': false,
    '–î–≤–∞ –ø–µ—Ä—Å—Ç–µ–Ω—ñ': false,
  });

  const [theme, setTheme] = useState('light');
  const [favoriteSongs, setFavoriteSongs] = useState([]);
  const [newSong, setNewSong] = useState('');
  const [showFact, setShowFact] = useState(false);

  const toggleLike = (song) => {
    setLikedSongs({ ...likedSongs, [song]: !likedSongs[song] });
  };

  const toggleTheme = () => {
    setTheme(theme === 'light' ? 'dark' : 'light');
  };

  const handleAddSong = () => {
    if (newSong.trim() !== '') {
      setFavoriteSongs([...favoriteSongs, newSong.trim()]);
      setNewSong('');
    }
  };

  const facts = [
    'üé∂ –ü—ñ—Å–Ω—è "–ß–µ—Ä–≤–æ–Ω–∞ —Ä—É—Ç–∞" –±—É–ª–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ –Ü–≤–∞—Å—é–∫–æ–º —É 1970 —Ä–æ—Ü—ñ —ñ —Å—Ç–∞–ª–∞ —Å–∏–º–≤–æ–ª–æ–º —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –µ—Å—Ç—Ä–∞–¥–∏.',
    'üéº –í–æ–ª–æ–¥–∏–º–∏—Ä –Ü–≤–∞—Å—é–∫ –±—É–≤ –∞–≤—Ç–æ—Ä–æ–º –ø–æ–Ω–∞–¥ 100 –ø—ñ—Å–µ–Ω—å, —Å–µ—Ä–µ–¥ —è–∫–∏—Ö –±–∞–≥–∞—Ç–æ —Å—Ç–∞–ª–∏ –Ω–∞—Ä–æ–¥–Ω–∏–º–∏ —Ö—ñ—Ç–∞–º–∏.',
    'üéª –Ü–≤–∞—Å—é–∫ –ø–æ—î–¥–Ω—É–≤–∞–≤ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π —Ñ–æ–ª—å–∫–ª–æ—Ä –∑ —Å—É—á–∞—Å–Ω–æ—é –µ—Å—Ç—Ä–∞–¥–æ—é, —â–æ –∑—Ä–æ–±–∏–ª–æ –π–æ–≥–æ —Ç–≤–æ—Ä—á—ñ—Å—Ç—å —É–Ω—ñ–∫–∞–ª—å–Ω–æ—é.',
    'üé§ –ü—ñ—Å–Ω—è "–Ø –ø—ñ–¥—É –≤ –¥–∞–ª–µ–∫—ñ –≥–æ—Ä–∏" –±—É–ª–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞, –∫–æ–ª–∏ –∫–æ–º–ø–æ–∑–∏—Ç–æ—Ä—É –±—É–ª–æ –ª–∏—à–µ 19 —Ä–æ–∫—ñ–≤.',
    'üìö –Ü–≤–∞—Å—é–∫ –±—É–≤ –Ω–µ –ª–∏—à–µ –º—É–∑–∏–∫–∞–Ω—Ç–æ–º, –∞ –π –ª—ñ–∫–∞—Ä–µ–º –∑–∞ –æ—Å–≤—ñ—Ç–æ—é.'
  ];
  const randomFact = facts[Math.floor(Math.random() * facts.length)];

  return (
    <div className={`app ${theme}`}>
      <h1>–í–æ–ª–æ–¥–∏–º–∏—Ä –Ü–≤–∞—Å—é–∫ ‚Äì –≥–µ–Ω—ñ–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –µ—Å—Ç—Ä–∞–¥–∏</h1>
      <img src="/—ñ–≤–∞—Å—é–∫.jpg" alt="–í–æ–ª–æ–¥–∏–º–∏—Ä –Ü–≤–∞—Å—é–∫" className="photo" />

      <section>
        <h2>–í—ñ–¥–æ–º—ñ –ø—ñ—Å–Ω—ñ</h2>
        {Object.keys(likedSongs).map((song) => (
          <div key={song} className="song-item">
            {song}
            <button onClick={() => toggleLike(song)}>
              {likedSongs[song] ? '‚ù§Ô∏è' : 'ü§ç'} 
            </button>
          </div>
        ))}
      </section>

      <button onClick={toggleTheme} className="toggle-theme">
        üéµ –ü–µ—Ä–µ–º–∫–Ω—É—Ç–∏ —Å—Ç–∏–ª—å ({theme === 'light' ? '–î–µ–Ω—å' : '–ù—ñ—á'})
      </button>

      <section>
        <h2>–°–ø–∏—Å–æ–∫ —É–ª—é–±–ª–µ–Ω–∏—Ö –ø—ñ—Å–µ–Ω—å</h2>
        <input
          type="text"
          value={newSong}
          onChange={(e) => setNewSong(e.target.value)}
          placeholder="–î–æ–¥–∞–π—Ç–µ —É–ª—é–±–ª–µ–Ω—É –ø—ñ—Å–Ω—é"
        />
        <button onClick={handleAddSong}>–î–æ–¥–∞—Ç–∏</button>
        <ul>
          {favoriteSongs.map((song, index) => (
            <li key={index}>{song}</li>
          ))}
        </ul>
      </section>

      <section>
        <button onClick={() => setShowFact(!showFact)}>
          {showFact ? '–ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ —Ü—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç' : '–ü–æ–∫–∞–∑–∞—Ç–∏ —Ü—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç'}
        </button>
        {showFact && (
          <p className="fact">{randomFact}</p>
        )}
      </section>
    </div>
  );
}

export default App;
